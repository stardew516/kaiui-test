<template>
	<view class="kai-content">
		<view class="padding-10 font-12">基础样式</view>
		<view class="padding-10">
			<checkbox-circle :config.sync="checkboxConfig" @bindchange.user="checkboxChange">
				<block slot="check-body">
					<repeat for="{{items}}" index="index" item="item" key="checkbox-{{index}}">
						<label class="checkbox-item">
							<view class="check-card">{{item.value}}</view>
							<checkbox value="{{item.id}}" checked="{{item.checked}}" disabled="{{item.disabled}}"/>
						</label>
					</repeat>
				</block>
			</checkbox-circle>
		</view>
		<view class="padding-10">
			<checkbox-cube :config.sync="checkboxConfig1" @bindchange.user="checkboxChange">
				<block slot="check-body">
					<repeat for="{{items1}}" index="index" item="item" key="checkbox-{{index}}">
						<label class="checkbox-item">
							<view class="check-card" catchtap="doTap">{{item.value}}</view>
							<checkbox value="{{item.id}}" checked="{{item.checked}}" disabled="{{item.disabled}}"/>
						</label>
					</repeat>
				</block>
			</checkbox-cube>
		</view>

		<view class="padding-10 font-12">禁选样式</view>

		<view class="padding-10">
			<checkbox-circle :config.sync="checkboxConfig" @bindchange.user="checkboxChange">
				<block slot="check-body">
					<repeat for="{{items3}}" index="index" item="item" key="checkbox-{{index}}">
						<label class="checkbox-item">
							<view class="check-card">{{item.value}}</view>
							<checkbox value="{{item.id}}" checked="{{item.checked}}" disabled="{{item.disabled}}"/>
						</label>
					</repeat>
				</block>
			</checkbox-circle>
		</view>
		<view class="padding-10">
			<checkbox-cube :config.sync="checkboxConfig1" @bindchange.user="checkboxChange">
				<block slot="check-body">
					<repeat for="{{items2}}" index="index" item="item" key="checkbox-{{index}}">
						<label class="checkbox-item">
							<view class="check-card">{{item.value}}</view>
							<checkbox value="{{item.id}}" checked="{{item.checked}}" disabled="{{item.disabled}}"/>
						</label>
					</repeat>
				</block>
			</checkbox-cube>
		</view>

		<view class="padding-10 font-12">inline样式</view>

		<view class="padding-10">
			<view style="background-color: #fff;">
				<checkbox-inline :config.sync="checkboxConfig2" @bindchange.user="checkboxChange1">
					<block slot="check-body">
						<repeat for="{{itemsInline}}" index="index" item="item" key="checkbox-{{index}}">
							<label class="checkbox-item">
								<view class="check-card">{{item.value}}</view>
								<checkbox value="{{item.id}}" checked="{{item.checked}}" disabled="{{item.disabled}}"/>
							</label>
						</repeat>
					</block>
				</checkbox-inline>
			</view>
		</view>
		<view class="padding-10">
			<button class="btn btn-kai" @tap="changePosition">点击切换圆形复选框位置</button>
		</view>
	</view>
</template>

<script>
import wepy from 'wepy'
import checkbox from 'kai-ui/Checkbox'

export default class CheckBox extends wepy.page {
	config = {
		navigationBarTitleText: 'Checkbox 复选框'
	}

	components = {
		'checkbox-circle': checkbox,
		'checkbox-cube': checkbox,
		'checkbox-inline': checkbox
	}

	data = {
		checkboxConfig: {
			className: 'sp-checkbox',
			position: 'left',
			circle: true
		},
		checkboxConfig1: {
			position: 'right',
			circle: false
		},
		checkboxConfig2: {
			position: 'left',
			circle: false,
			inline: true
		},
		items: [{id: '1000', value: '圆形复选框', checked: true}],
		items0: [{id: '1000', value: '点击文字阻止选择', checked: true}],
		items1: [{id: '1000', value: '方形复选框点击文字不选中', checked: true}],
		items2: [{id: '1001', value: '方形复选框', checked: true, disabled: true}, {id: '1001', value: '方形复选框', checked: false, disabled: true}],
		items3: [{id: '1001', value: '圆形复选框', checked: false, disabled: true}, {id: '1001', value: '圆形复选框', checked: true, disabled: true}],
		itemsInline: [{id: '1003', value: '显示同行'}, {id: '1004', value: '显示同行'}]
	}

	computed = {}

	methods = {
		doTap () {
			console.log('阻止冒泡成功')
		},
		checkboxChange1 (res) {
			console.log(res)
		},
		checkboxChange (res) {
			console.log(res)
			if (res.length) {
				this.items[0].checked = true
				this.items1[0].checked = true
			} else {
				this.items[0].checked = false
				this.items1[0].checked = false
			}
			this.$apply()
		},
		changePosition () {
			const {checkboxConfig} = this
			this.checkboxConfig.position = checkboxConfig.position === 'left' ? 'right' : 'left'
			this.$apply()
		}
	}

	events = {}

	onLoad() {}
}
</script>
